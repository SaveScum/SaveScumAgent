using System;
using System.IO;
using Microsoft.Pex.Framework.Generated;
using Microsoft.VisualStudio.TestTools.UnitTesting;
// <copyright file="UtilsTest.IsFolderSubfolderOf.g.cs">Copyright ©  2015</copyright>
// <auto-generated>
// This file contains automatically generated tests.
// Do not modify this file manually.
// 
// If the contents of this file becomes outdated, you can delete it.
// For example, if it no longer compiles.
// </auto-generated>

namespace AutoBackup
{
    public partial class UtilsTest
    {
        [TestMethod]
        [PexGeneratedBy(typeof (UtilsTest))]
        public void IsFolderSubfolderOf431()
        {
            var b = IsFolderSubfolderOf(null, null);
            Assert.AreEqual(false, b);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(UtilsTest))]
        public void IsFolderSubfolderOf432()
        {
            var d1 = new DirectoryInfo(Directory.GetCurrentDirectory());
            var d2 = d1.Parent;

            var b = IsFolderSubfolderOf(d1, d2);
            Assert.AreEqual(true, b);
        }
        [TestMethod]
        [PexGeneratedBy(typeof(UtilsTest))]
        public void IsFolderSubfolderOf433()
        {
            var d1 = new DirectoryInfo(Directory.GetCurrentDirectory());
            var d2 = d1.Root;

            var b = IsFolderSubfolderOf(d2, d1);
            Assert.AreEqual(false, b);
        }
        [TestMethod]
        [PexGeneratedBy(typeof(UtilsTest))]
        public void IsFolderSubfolderOf434()
        {
            var d1 = new DirectoryInfo(Environment.GetFolderPath(Environment.SpecialFolder.Windows));
            var d2 = new DirectoryInfo(Environment.GetFolderPath(Environment.SpecialFolder.ProgramFilesX86));

            var b = IsFolderSubfolderOf(d1, d2);
            Assert.AreEqual(false, b);
        }
    }
}